{"ast":null,"code":"var _jsxFileName = \"/home/shail/Project/google-login/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport Logout from './logoutgoogle';\nimport { Link, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onClickGoogle = async term => {\n      var _window$gapi;\n\n      console.log(term);\n      (_window$gapi = window.gapi) === null || _window$gapi === void 0 ? void 0 : _window$gapi.auth2.init({\n        client_id: '571417961310-svapabdv4mq5hulnv4lojgcofhd07bpv.apps.googleusercontent.com',\n        scope: 'email profile openid',\n        response_type: 'permission',\n        fetch_basic_profile: 'true'\n      }, response => {\n        this.onSignIn();\n        console.log(response);\n\n        if (response.error) {\n          return;\n        } // The user authorized the applicfunctionation for the scopes requested.\n\n\n        var accessToken = response.access_token;\n        var idToken = response.id_token;\n        console.log(accessToken, idToken);\n      });\n    };\n\n    this.onSignIn = () => {\n      const googleUser = window.gapi.auth2.getAuthInstance().currentUser.get();\n      var profile = googleUser === null || googleUser === void 0 ? void 0 : googleUser.getBasicProfile();\n      console.log(profile);\n      console.log('ID: ' + (profile === null || profile === void 0 ? void 0 : profile.getId())); // Do not send to your backend! Use an ID token instead.\n\n      console.log('Name: ' + (profile === null || profile === void 0 ? void 0 : profile.getName()));\n      console.log('Image URL: ' + (profile === null || profile === void 0 ? void 0 : profile.getImageUrl()));\n      console.log('Email: ' + (profile === null || profile === void 0 ? void 0 : profile.getEmail()));\n\n      if (profile === null || profile === void 0 ? void 0 : profile.getId) {\n        /*#__PURE__*/\n        _jsxDEV(Link, {\n          to: \"logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 8\n        }, this);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/logout\",\n            component: Logout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"g-signin2\",\n            \"data-onsuccess\": \"onSignIn\",\n            onClick: this.onClickGoogle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/shail/Project/google-login/src/App.js"],"names":["React","Logout","Link","Route","App","Component","onClickGoogle","term","console","log","window","gapi","auth2","init","client_id","scope","response_type","fetch_basic_profile","response","onSignIn","error","accessToken","access_token","idToken","id_token","googleUser","getAuthInstance","currentUser","get","profile","getBasicProfile","getId","getName","getImageUrl","getEmail","render"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react';\nimport Logout from './logoutgoogle';\nimport {Link, Route} from 'react-router-dom';\n\nclass App extends React.Component {\n  onClickGoogle = async term => {\n    console.log(term)\n    window.gapi?.auth2.init({\n        client_id: '571417961310-svapabdv4mq5hulnv4lojgcofhd07bpv.apps.googleusercontent.com',\n        scope: 'email profile openid',\n        response_type: 'permission',\n        fetch_basic_profile:'true'\n      }, (response)=> {\n          this.onSignIn();\n          console.log(response)\n        if (response.error) {\n          return;\n        }\n        // The user authorized the applicfunctionation for the scopes requested.\n        var accessToken = response.access_token;\n        var idToken = response.id_token;\n        console.log(accessToken,idToken)\n      });\n}\n onSignIn=()=> {\n   const googleUser = window.gapi.auth2.getAuthInstance().currentUser.get();\n    var profile = googleUser?.getBasicProfile();\n   console.log(profile)\n    console.log('ID: ' + profile?.getId()); // Do not send to your backend! Use an ID token instead.\n    console.log('Name: ' + profile?.getName());\n    console.log('Image URL: ' + profile?.getImageUrl());\n    console.log('Email: ' + profile?.getEmail()); \n    if(profile?.getId){\n       <Link to=\"logout\"/>\n    }\n    \n  }\n   \n  render(){\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <React.Fragment>\n            <Route exact path=\"/\" />\n            <Route path=\"/logout\" component={Logout}/>\n              <div className=\"g-signin2\" data-onsuccess=\"onSignIn\" onClick={ this.onClickGoogle}></div>\n            </React.Fragment>\n         \n        </header>\n      </div>\n    );\n\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}