{"ast":null,"code":"var _jsxFileName = \"/home/shail/Project/google-login/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onClickGoogle = async term => {\n      var _window$gapi;\n\n      (_window$gapi = window.gapi) === null || _window$gapi === void 0 ? void 0 : _window$gapi.auth2.authorize({\n        client_id: 'CLIENT_ID.apps.googleusercontent.com',\n        scope: 'email profile openid',\n        response_type: 'permission',\n        fetch_basic_profile: 'true'\n      }, function (response) {\n        console.log(response);\n\n        if (response.error) {\n          // An error happened!\n          return;\n        } // The user authorized the application for the scopes requested.\n\n\n        var accessToken = response.access_token;\n        var idToken = response.id_token;\n        console.log(accessToken, idToken); // You can also now use gapi.client to perform authenticated requests.\n      });\n    };\n\n    this.onSignIn = googleUser => {\n      var profile = googleUser.getBasicProfile();\n      console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.\n\n      console.log('Name: ' + profile.getName());\n      console.log('Image URL: ' + profile.getImageUrl());\n      console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"g-signin2\",\n            \"data-onsuccess\": \"onSignIn\",\n            onClick: this.onClickGoogle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/shail/Project/google-login/src/App.js"],"names":["React","App","Component","onClickGoogle","term","window","gapi","auth2","authorize","client_id","scope","response_type","fetch_basic_profile","response","console","log","error","accessToken","access_token","idToken","id_token","onSignIn","googleUser","profile","getBasicProfile","getId","getName","getImageUrl","getEmail","render"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAChCC,aADgC,GAChB,MAAMC,IAAN,IAAc;AAAA;;AAC5B,sBAAAC,MAAM,CAACC,IAAP,8DAAaC,KAAb,CAAmBC,SAAnB,CAA6B;AACzBC,QAAAA,SAAS,EAAE,sCADc;AAEzBC,QAAAA,KAAK,EAAE,sBAFkB;AAGzBC,QAAAA,aAAa,EAAE,YAHU;AAIzBC,QAAAA,mBAAmB,EAAC;AAJK,OAA7B,EAKK,UAASC,QAAT,EAAmB;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACF,YAAIA,QAAQ,CAACG,KAAb,EAAoB;AAClB;AACA;AACD,SALmB,CAMpB;;;AACA,YAAIC,WAAW,GAAGJ,QAAQ,CAACK,YAA3B;AACA,YAAIC,OAAO,GAAGN,QAAQ,CAACO,QAAvB;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAYE,WAAZ,EAAwBE,OAAxB,EAToB,CAUpB;AACD,OAhBH;AAiBH,KAnBiC;;AAAA,SAoBjCE,QApBiC,GAoBvBC,UAAD,IAAe;AACrB,UAAIC,OAAO,GAAGD,UAAU,CAACE,eAAX,EAAd;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,SAASQ,OAAO,CAACE,KAAR,EAArB,EAFqB,CAEkB;;AACvCX,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAWQ,OAAO,CAACG,OAAR,EAAvB;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBQ,OAAO,CAACI,WAAR,EAA5B;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAYQ,OAAO,CAACK,QAAR,EAAxB,EALqB,CAKwB;AAC9C,KA1B+B;AAAA;;AA2BhCC,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,+BACE,QAAC,KAAD,CAAO,QAAP;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,WAAf;AAA2B,8BAAe,UAA1C;AAAqD,YAAA,OAAO,EAAE,KAAK1B;AAAnE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAvC+B;;AA2ClC,eAAeF,GAAf","sourcesContent":["import './App.css';\nimport React from 'react';\n\nclass App extends React.Component {\n  onClickGoogle = async term => {\n    window.gapi?.auth2.authorize({\n        client_id: 'CLIENT_ID.apps.googleusercontent.com',\n        scope: 'email profile openid',\n        response_type: 'permission',\n        fetch_basic_profile:'true'\n      }, function(response) {\n          console.log(response)\n        if (response.error) {\n          // An error happened!\n          return;\n        }\n        // The user authorized the application for the scopes requested.\n        var accessToken = response.access_token;\n        var idToken = response.id_token;\n        console.log(accessToken,idToken)\n        // You can also now use gapi.client to perform authenticated requests.\n      });\n}\n onSignIn=(googleUser)=> {\n    var profile = googleUser.getBasicProfile();\n    console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.\n    console.log('Name: ' + profile.getName());\n    console.log('Image URL: ' + profile.getImageUrl());\n    console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <React.Fragment>\n              <div className=\"g-signin2\" data-onsuccess=\"onSignIn\" onClick={this.onClickGoogle}></div>\n            </React.Fragment>\n         \n        </header>\n      </div>\n    );\n\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}