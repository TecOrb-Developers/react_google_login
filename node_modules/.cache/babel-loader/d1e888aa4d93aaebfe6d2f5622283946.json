{"ast":null,"code":"var _jsxFileName = \"/home/shail/Project/google-login/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onClickGoogle = async term => {\n      var _window$gapi;\n\n      console.log(term);\n      (_window$gapi = window.gapi) === null || _window$gapi === void 0 ? void 0 : _window$gapi.auth2.init({\n        client_id: '571417961310-svapabdv4mq5hulnv4lojgcofhd07bpv.apps.googleusercontent.com',\n        scope: 'email profile openid',\n        response_type: 'permission',\n        fetch_basic_profile: 'true'\n      }, function (response) {\n        console.log(response);\n\n        if (response.error) {\n          // An error happened!\n          return;\n        } // The user authorized the application for the scopes requested.\n\n\n        var accessToken = response.access_token;\n        var idToken = response.id_token;\n        console.log(accessToken, idToken); // You can also now use gapi.client to perform authenticated requests.\n      });\n    };\n\n    this.onSignIn = () => {\n      const googleUser = window.gapi.auth2.getAuthInstance().currentUser.get();\n      var profile = googleUser === null || googleUser === void 0 ? void 0 : googleUser.getBasicProfile();\n      console.log(googleUser);\n      console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.\n\n      console.log('Name: ' + profile.getName());\n      console.log('Image URL: ' + profile.getImageUrl());\n      console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.\n    };\n\n    this.signOut = () => {\n      var auth2 = window.gapi.auth2.getAuthInstance();\n      auth2.signOut().then(function () {\n        console.log('User signed out.');\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"g-signin2\",\n            \"data-onsuccess\": \"onSignIn\",\n            onClick: this.onSignIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onclick: \"signOut();\",\n            children: \"Sign out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/shail/Project/google-login/src/App.js"],"names":["React","App","Component","onClickGoogle","term","console","log","window","gapi","auth2","init","client_id","scope","response_type","fetch_basic_profile","response","error","accessToken","access_token","idToken","id_token","onSignIn","googleUser","getAuthInstance","currentUser","get","profile","getBasicProfile","getId","getName","getImageUrl","getEmail","signOut","then","render"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAChCC,aADgC,GAChB,MAAMC,IAAN,IAAc;AAAA;;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,sBAAAG,MAAM,CAACC,IAAP,8DAAaC,KAAb,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,SAAS,EAAE,0EADS;AAEpBC,QAAAA,KAAK,EAAE,sBAFa;AAGpBC,QAAAA,aAAa,EAAE,YAHK;AAIpBC,QAAAA,mBAAmB,EAAC;AAJA,OAAxB,EAKK,UAASC,QAAT,EAAmB;AAClBV,QAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ;;AACF,YAAIA,QAAQ,CAACC,KAAb,EAAoB;AAClB;AACA;AACD,SALmB,CAMpB;;;AACA,YAAIC,WAAW,GAAGF,QAAQ,CAACG,YAA3B;AACA,YAAIC,OAAO,GAAGJ,QAAQ,CAACK,QAAvB;AACAf,QAAAA,OAAO,CAACC,GAAR,CAAYW,WAAZ,EAAwBE,OAAxB,EAToB,CAUpB;AACD,OAhBH;AAiBH,KApBiC;;AAAA,SAqBjCE,QArBiC,GAqBxB,MAAK;AACZ,YAAMC,UAAU,GAAGf,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkBc,eAAlB,GAAoCC,WAApC,CAAgDC,GAAhD,EAAnB;AACC,UAAIC,OAAO,GAAGJ,UAAH,aAAGA,UAAH,uBAAGA,UAAU,CAAEK,eAAZ,EAAd;AACDtB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,UAAZ;AACCjB,MAAAA,OAAO,CAACC,GAAR,CAAY,SAASoB,OAAO,CAACE,KAAR,EAArB,EAJW,CAI4B;;AACvCvB,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAWoB,OAAO,CAACG,OAAR,EAAvB;AACAxB,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBoB,OAAO,CAACI,WAAR,EAA5B;AACAzB,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAYoB,OAAO,CAACK,QAAR,EAAxB,EAPW,CAOkC;AAC9C,KA7B+B;;AAAA,SA8B/BC,OA9B+B,GA8BvB,MAAK;AACZ,UAAIvB,KAAK,GAAGF,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkBc,eAAlB,EAAZ;AACAd,MAAAA,KAAK,CAACuB,OAAN,GAAgBC,IAAhB,CAAqB,YAAY;AAC/B5B,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,OAFD;AAGD,KAnC+B;AAAA;;AAoChC4B,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,+BACE,QAAC,KAAD,CAAO,QAAP;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,WAAf;AAA2B,8BAAe,UAA1C;AAAqD,YAAA,OAAO,EAAG,KAAKb;AAApE;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAG,YAAA,IAAI,EAAC,GAAR;AAAY,YAAA,OAAO,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAjD+B;;AAqDlC,eAAepB,GAAf","sourcesContent":["import './App.css';\nimport React from 'react';\n\nclass App extends React.Component {\n  onClickGoogle = async term => {\n    console.log(term)\n    window.gapi?.auth2.init({\n        client_id: '571417961310-svapabdv4mq5hulnv4lojgcofhd07bpv.apps.googleusercontent.com',\n        scope: 'email profile openid',\n        response_type: 'permission',\n        fetch_basic_profile:'true'\n      }, function(response) {\n          console.log(response)\n        if (response.error) {\n          // An error happened!\n          return;\n        }\n        // The user authorized the application for the scopes requested.\n        var accessToken = response.access_token;\n        var idToken = response.id_token;\n        console.log(accessToken,idToken)\n        // You can also now use gapi.client to perform authenticated requests.\n      });\n}\n onSignIn=()=> {\n   const googleUser = window.gapi.auth2.getAuthInstance().currentUser.get();\n    var profile = googleUser?.getBasicProfile();\n   console.log(googleUser)\n    console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.\n    console.log('Name: ' + profile.getName());\n    console.log('Image URL: ' + profile.getImageUrl());\n    console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.\n  }\n   signOut=()=> {\n    var auth2 = window.gapi.auth2.getAuthInstance();\n    auth2.signOut().then(function () {\n      console.log('User signed out.');\n    });\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <React.Fragment>\n              <div className=\"g-signin2\" data-onsuccess=\"onSignIn\" onClick={ this.onSignIn}></div>\n              <a href=\"#\" onclick=\"signOut();\">Sign out</a>\n            </React.Fragment>\n         \n        </header>\n      </div>\n    );\n\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}