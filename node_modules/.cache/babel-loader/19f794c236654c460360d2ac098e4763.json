{"ast":null,"code":"var _jsxFileName = \"/home/shail/Project/google-login/src/logoutgoogle.js\";\nimport React from \"react\"; // import Swal from \"sweetalert2\";\n// import { Token } from \"../../../Api/Token/token\";\n// import ApiUrl from \"../../../Api/Urls/api_urls\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GoogleLoginAuthentication extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.signIn = () => {\n      const ga = window.gapi.auth2.getAuthInstance();\n      ga.signIn().then(googleUser => {\n        //  console.log(\"googleUser===>\", googleUser)\n        this.getAWSCredentials(googleUser);\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.getAWSCredentials = googleUser => {\n      // console.log(\"googleUser===>\", googleUser)\n      // this.props.action.googleLoginAuthentication(googleUser);\n      let first_name = googleUser.Qt.vW;\n      let last_name = googleUser.Qt.wU;\n      let name = first_name + last_name;\n      let provider_id = googleUser.Qt.SU;\n      let email = googleUser.Qt.zu; // let image = googleUser.Qt.UK;\n      // let name = first_name + last_name;\n\n      this.setState({\n        name,\n        provider_id,\n        email // image\n\n      }); // this.onClickGoogle();\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      provider_id: \"\",\n      provider_type: \"google\",\n      image: \"\"\n    };\n  }\n\n  // onClickGoogle = async term => {\n  //     const { name, email, provider_id, provider_type, image } = this.state;\n  //     Swal.fire({\n  //         title: 'Loading...',\n  //         html: '',\n  //         allowOutsideClick: false,\n  //         onBeforeOpen: () => {\n  //             Swal.showLoading()\n  //             // window.location.reload()\n  //         }\n  //     })\n  //     const response = await Token.WITHOUT_TOKEN.post(ApiUrl.SOCIAL_AUTH, {\n  //         name: name,\n  //         email: email,\n  //         provider_id: provider_id,\n  //         provider_type: provider_type,\n  //         image: image\n  //     })\n  //     // console.log(\"QWERTYU Before\", response)\n  //     if (response.data.code === 200) {\n  //         // console.log(\"QWERTYU After\", response)\n  //         localStorage.setItem(\"token\", response.data.result.sessionToken)\n  //         window.location = \"home\";\n  //     }\n  //     Swal.close()\n  // }\n  createScript() {\n    // load the Google SDK\n    const script = document.createElement(\"script\");\n    script.src = \"https://apis.google.com/js/platform.js\";\n    script.async = true;\n    script.onload = this.initGapi;\n    document.body.appendChild(script);\n  }\n\n  initGapi() {\n    // init the Google SDK client\n    const g = window.gapi; // console.log(\"a===>\", g)\n\n    g.load(\"auth2\", function () {\n      g.auth2.init({\n        client_id: \"571417961310-svapabdv4mq5hulnv4lojgcofhd07bpv.apps.googleusercontent.com\",\n        scope: \"profile email openid\"\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.signIn,\n        children: \"SignIn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GoogleLoginAuthentication;","map":{"version":3,"sources":["/home/shail/Project/google-login/src/logoutgoogle.js"],"names":["React","GoogleLoginAuthentication","Component","constructor","props","signIn","ga","window","gapi","auth2","getAuthInstance","then","googleUser","getAWSCredentials","error","console","log","first_name","Qt","vW","last_name","wU","name","provider_id","SU","email","zu","setState","state","provider_type","image","createScript","script","document","createElement","src","async","onload","initGapi","body","appendChild","g","load","init","client_id","scope","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;;;;AAGA,MAAMC,yBAAN,SAAwCD,KAAK,CAACE,SAA9C,CAAwD;AAEpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAYnBC,MAZmB,GAYV,MAAM;AACX,YAAMC,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkBC,eAAlB,EAAX;AACAJ,MAAAA,EAAE,CAACD,MAAH,GAAYM,IAAZ,CACIC,UAAU,IAAI;AACV;AACA,aAAKC,iBAAL,CAAuBD,UAAvB;AACH,OAJL,EAKIE,KAAK,IAAI;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAPL;AASH,KAvBkB;;AAAA,SAyBnBD,iBAzBmB,GAyBED,UAAD,IAAgB;AAChC;AACA;AACA,UAAIK,UAAU,GAAGL,UAAU,CAACM,EAAX,CAAcC,EAA/B;AACA,UAAIC,SAAS,GAAGR,UAAU,CAACM,EAAX,CAAcG,EAA9B;AACA,UAAIC,IAAI,GAAGL,UAAU,GAAGG,SAAxB;AACA,UAAIG,WAAW,GAAGX,UAAU,CAACM,EAAX,CAAcM,EAAhC;AACA,UAAIC,KAAK,GAAGb,UAAU,CAACM,EAAX,CAAcQ,EAA1B,CAPgC,CAQhC;AACA;;AACA,WAAKC,QAAL,CAAc;AACVL,QAAAA,IADU;AAEVC,QAAAA,WAFU;AAGVE,QAAAA,KAHU,CAIV;;AAJU,OAAd,EAVgC,CAiBhC;AACH,KA3CkB;;AAEf,SAAKG,KAAL,GAAa;AACTN,MAAAA,IAAI,EAAE,EADG;AAETG,MAAAA,KAAK,EAAE,EAFE;AAGTF,MAAAA,WAAW,EAAE,EAHJ;AAITM,MAAAA,aAAa,EAAE,QAJN;AAKTC,MAAAA,KAAK,EAAE;AALE,KAAb;AAOH;;AAoCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEAC,EAAAA,YAAY,GAAG;AACX;AACA,UAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAF,IAAAA,MAAM,CAACG,GAAP,GAAa,wCAAb;AACAH,IAAAA,MAAM,CAACI,KAAP,GAAe,IAAf;AACAJ,IAAAA,MAAM,CAACK,MAAP,GAAgB,KAAKC,QAArB;AACAL,IAAAA,QAAQ,CAACM,IAAT,CAAcC,WAAd,CAA0BR,MAA1B;AACH;;AAEDM,EAAAA,QAAQ,GAAG;AACP;AACA,UAAMG,CAAC,GAAGlC,MAAM,CAACC,IAAjB,CAFO,CAIP;;AACAiC,IAAAA,CAAC,CAACC,IAAF,CAAO,OAAP,EAAgB,YAAY;AACxBD,MAAAA,CAAC,CAAChC,KAAF,CAAQkC,IAAR,CAAa;AACTC,QAAAA,SAAS,EACL,0EAFK;AAGTC,QAAAA,KAAK,EAAE;AAHE,OAAb;AAKH,KAND;AAOH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAE,KAAKzC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAzGmD;;AA4GxD,eAAeJ,yBAAf","sourcesContent":["import React from \"react\";\n// import Swal from \"sweetalert2\";\n// import { Token } from \"../../../Api/Token/token\";\n// import ApiUrl from \"../../../Api/Urls/api_urls\";\n\n\nclass GoogleLoginAuthentication extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: \"\",\n            email: \"\",\n            provider_id: \"\",\n            provider_type: \"google\",\n            image: \"\"\n        }\n    }\n\n    \n    signIn = () => {\n        const ga = window.gapi.auth2.getAuthInstance();\n        ga.signIn().then(\n            googleUser => {\n                //  console.log(\"googleUser===>\", googleUser)\n                this.getAWSCredentials(googleUser);\n            },\n            error => {\n                console.log(error);\n            }\n        );\n    }\n\n    getAWSCredentials = (googleUser) => {\n        // console.log(\"googleUser===>\", googleUser)\n        // this.props.action.googleLoginAuthentication(googleUser);\n        let first_name = googleUser.Qt.vW;\n        let last_name = googleUser.Qt.wU;\n        let name = first_name + last_name;\n        let provider_id = googleUser.Qt.SU;\n        let email = googleUser.Qt.zu;\n        // let image = googleUser.Qt.UK;\n        // let name = first_name + last_name;\n        this.setState({\n            name,\n            provider_id,\n            email,\n            // image\n        })\n\n        // this.onClickGoogle();\n    }\n\n    // onClickGoogle = async term => {\n    //     const { name, email, provider_id, provider_type, image } = this.state;\n    //     Swal.fire({\n    //         title: 'Loading...',\n    //         html: '',\n    //         allowOutsideClick: false,\n    //         onBeforeOpen: () => {\n    //             Swal.showLoading()\n    //             // window.location.reload()\n    //         }\n    //     })\n    //     const response = await Token.WITHOUT_TOKEN.post(ApiUrl.SOCIAL_AUTH, {\n    //         name: name,\n    //         email: email,\n    //         provider_id: provider_id,\n    //         provider_type: provider_type,\n    //         image: image\n    //     })\n    //     // console.log(\"QWERTYU Before\", response)\n    //     if (response.data.code === 200) {\n    //         // console.log(\"QWERTYU After\", response)\n    //         localStorage.setItem(\"token\", response.data.result.sessionToken)\n    //         window.location = \"home\";\n    //     }\n    //     Swal.close()\n\n\n    // }\n\n    createScript() {\n        // load the Google SDK\n        const script = document.createElement(\"script\");\n        script.src = \"https://apis.google.com/js/platform.js\";\n        script.async = true;\n        script.onload = this.initGapi;\n        document.body.appendChild(script);\n    }\n\n    initGapi() {\n        // init the Google SDK client\n        const g = window.gapi;\n\n        // console.log(\"a===>\", g)\n        g.load(\"auth2\", function () {\n            g.auth2.init({\n                client_id:\n                    \"571417961310-svapabdv4mq5hulnv4lojgcofhd07bpv.apps.googleusercontent.com\",\n                scope: \"profile email openid\"\n            });\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <button onClick={this.signIn}>SignIn</button>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default GoogleLoginAuthentication;"]},"metadata":{},"sourceType":"module"}