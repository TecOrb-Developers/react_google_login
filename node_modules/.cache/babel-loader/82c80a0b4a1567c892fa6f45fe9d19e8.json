{"ast":null,"code":"var _jsxFileName = \"/home/shail/Project/google-login/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport Logout from './logoutgoogle';\nimport { Link, Route } from 'react-router-dom';\nimport GoogleLoginAuthentication from './logoutgoogle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onClickGoogle = async term => {\n      var _window$gapi;\n\n      console.log(term);\n      (_window$gapi = window.gapi) === null || _window$gapi === void 0 ? void 0 : _window$gapi.auth2.init({\n        client_id: '571417961310-svapabdv4mq5hulnv4lojgcofhd07bpv.apps.googleusercontent.com',\n        scope: 'email profile openid',\n        response_type: 'permission',\n        fetch_basic_profile: 'false'\n      }, response => {\n        console.log(response);\n\n        if (response.error) {\n          return;\n        } // The user authorized the applicfunctionation for the scopes requested.\n\n\n        var accessToken = response.access_token;\n        var idToken = response.id_token;\n        console.log(accessToken, idToken);\n      });\n    };\n\n    this.onSignIn = () => {\n      const googleUser = window.gapi.auth2.getAuthInstance().currentUser.get();\n      var profile = googleUser === null || googleUser === void 0 ? void 0 : googleUser.getBasicProfile(); //  console.log(profile)\n      //   console.log('ID: ' + profile?.getId()); // Do not send to your backend! Use an ID token instead.\n      //   console.log('Name: ' + profile?.getName());\n      //   console.log('Image URL: ' + profile?.getImageUrl());\n      //   console.log('Email: ' + profile?.getEmail()); \n      //   if(profile?.getId){\n      //      <Link to=\"logout\"/>\n      //   }\n    };\n  }\n\n  componentDidMount() {\n    var _window$gapi2;\n\n    (_window$gapi2 = window.gapi) === null || _window$gapi2 === void 0 ? void 0 : _window$gapi2.signin2.render('g-signin2', {\n      'scope': 'https://www.googleapis.com/auth/plus.login',\n      'width': 200,\n      'height': 50,\n      'longtitle': true,\n      'theme': 'dark',\n      'onsuccess': this.onSignIn\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/logout\",\n            component: Logout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GoogleLoginAuthentication, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"g-signin2\",\n            \"data-onsuccess\": \"onSignIn\",\n            onClick: this.onSignIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/shail/Project/google-login/src/App.js"],"names":["React","Logout","Link","Route","GoogleLoginAuthentication","App","Component","onClickGoogle","term","console","log","window","gapi","auth2","init","client_id","scope","response_type","fetch_basic_profile","response","error","accessToken","access_token","idToken","id_token","onSignIn","googleUser","getAuthInstance","currentUser","get","profile","getBasicProfile","componentDidMount","signin2","render"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAAQC,IAAR,EAAcC,KAAd,QAA0B,kBAA1B;AACA,OAAOC,yBAAP,MAAsC,gBAAtC;;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAWhCC,aAXgC,GAWhB,MAAMC,IAAN,IAAc;AAAA;;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,sBAAAG,MAAM,CAACC,IAAP,8DAAaC,KAAb,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,SAAS,EAAE,0EADS;AAEpBC,QAAAA,KAAK,EAAE,sBAFa;AAGpBC,QAAAA,aAAa,EAAE,YAHK;AAIpBC,QAAAA,mBAAmB,EAAC;AAJA,OAAxB,EAKMC,QAAD,IAAa;AACZV,QAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ;;AACF,YAAIA,QAAQ,CAACC,KAAb,EAAoB;AAClB;AACD,SAJa,CAKd;;;AACA,YAAIC,WAAW,GAAGF,QAAQ,CAACG,YAA3B;AACA,YAAIC,OAAO,GAAGJ,QAAQ,CAACK,QAAvB;AACAf,QAAAA,OAAO,CAACC,GAAR,CAAYW,WAAZ,EAAwBE,OAAxB;AACD,OAdH;AAeH,KA5BiC;;AAAA,SA6BjCE,QA7BiC,GA6BxB,MAAK;AACZ,YAAMC,UAAU,GAAGf,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkBc,eAAlB,GAAoCC,WAApC,CAAgDC,GAAhD,EAAnB;AACC,UAAIC,OAAO,GAAGJ,UAAH,aAAGA,UAAH,uBAAGA,UAAU,CAAEK,eAAZ,EAAd,CAFW,CAGb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC,KAzC+B;AAAA;;AAChCC,EAAAA,iBAAiB,GAAG;AAAA;;AAClB,qBAAArB,MAAM,CAACC,IAAP,gEAAaqB,OAAb,CAAqBC,MAArB,CAA4B,WAA5B,EAAyC;AACvC,eAAS,4CAD8B;AAEvC,eAAS,GAF8B;AAGvC,gBAAU,EAH6B;AAIvC,mBAAa,IAJ0B;AAKvC,eAAS,MAL8B;AAMvC,mBAAa,KAAKT;AANqB,KAAzC;AAQD;;AAiCDS,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,+BACE,QAAC,KAAD,CAAO,QAAP;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,SAAZ;AAAsB,YAAA,SAAS,EAAEjC;AAAjC;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,yBAAD;AAAA;AAAA;AAAA;AAAA,kBAHF,eAII;AAAK,YAAA,SAAS,EAAC,WAAf;AAA2B,8BAAe,UAA1C;AAAqD,YAAA,OAAO,EAAG,KAAKwB;AAApE;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAzD+B;;AA4DlC,eAAepB,GAAf","sourcesContent":["import './App.css';\nimport React from 'react';\nimport Logout from './logoutgoogle';\nimport {Link, Route} from 'react-router-dom';\nimport GoogleLoginAuthentication from './logoutgoogle';\n\nclass App extends React.Component {\n  componentDidMount() {\n    window.gapi?.signin2.render('g-signin2', {\n      'scope': 'https://www.googleapis.com/auth/plus.login',\n      'width': 200,\n      'height': 50,\n      'longtitle': true,\n      'theme': 'dark',\n      'onsuccess': this.onSignIn\n    });  \n  }\n  onClickGoogle = async term => {\n    console.log(term)\n    window.gapi?.auth2.init({\n        client_id: '571417961310-svapabdv4mq5hulnv4lojgcofhd07bpv.apps.googleusercontent.com',\n        scope: 'email profile openid',\n        response_type: 'permission',\n        fetch_basic_profile:'false'\n      }, (response)=> {\n          console.log(response)\n        if (response.error) {\n          return;\n        }\n        // The user authorized the applicfunctionation for the scopes requested.\n        var accessToken = response.access_token;\n        var idToken = response.id_token;\n        console.log(accessToken,idToken)\n      });\n}\n onSignIn=()=> {\n   const googleUser = window.gapi.auth2.getAuthInstance().currentUser.get();\n    var profile = googleUser?.getBasicProfile();\n  //  console.log(profile)\n  //   console.log('ID: ' + profile?.getId()); // Do not send to your backend! Use an ID token instead.\n  //   console.log('Name: ' + profile?.getName());\n  //   console.log('Image URL: ' + profile?.getImageUrl());\n  //   console.log('Email: ' + profile?.getEmail()); \n  //   if(profile?.getId){\n  //      <Link to=\"logout\"/>\n  //   }\n    \n  }\n   \n  render(){\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <React.Fragment>\n            <Route exact path=\"/\" />\n            <Route path=\"/logout\" component={Logout}/>\n            <GoogleLoginAuthentication />\n              <div className=\"g-signin2\" data-onsuccess=\"onSignIn\" onClick={ this.onSignIn}></div>\n            </React.Fragment>\n         \n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}